name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  
      
jobs:
  
  build:
    name: Build and Deploy    
    runs-on: windows-latest
    steps:
  
    - name: Replace Version
      # You may pin to the exact commit or the version.
      # uses: datamonsters/replace-action@54f8e7be24769a843c1c60a0cc9fa3c1aaa906ca
      uses: datamonsters/replace-action@v2
      with:
        # Files, comma-separated. Supposed PLACEHOLDER in them
        files: "Program.cs"
        # Comma-separated pairs PLACEHOLDER=value
        replacements: "$Version=${{ github.run_number }}"   
    
   
        
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
    
  
     
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Publish X86
      run: dotnet publish Vb6VirtualRegistry --configuration Release --framework netcoreapp3.1 --runtime win-x86 /p:PublishSingleFile=true --self-contained true --output ./artifacts
                  
    
    - name: Upload X86 Artifact
      uses: actions/upload-artifact@v2
      with:
       name: Vb6VirtualRegistry32
       path: ./artifacts/Vb6VirtualRegistry.exe

       
    - name: Create release archive X86
      run: Compress-Archive -Path ./artifacts/Vb6VirtualRegistry.exe -DestinationPath ./artifacts/Vb6VirtualRegistry32.zip 
      
    
       
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{github.run_number}}
        release_name: Release V${{github.run_number}}
    
    - name: Upload Release Asset x86
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./artifacts/Vb6VirtualRegistry32.zip
        asset_name: Vb6VirtualRegistry32.zip
        asset_content_type: application/zip
    
      
